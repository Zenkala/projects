/*
 * compassMenu.h
 *
 *  Created on: May 22, 2013
 *      Author: tomv
 */

#ifndef compassMenu_H_
#define compassMenu_H_


#include <inttypes.h>


/// Class defining and handling one menu tree
class compassMenu {
public:

	compassMenu();

    void compassInit(AP_Compass_HMC5843 *compass, FastSerial  *port);

    static void setup_printf_P(const prog_char_t *fmt, ...)
    {
        va_list arg_list;
        va_start(arg_list, fmt);
        compassMenu::_Console->vprintf_P(fmt, arg_list);
        va_end(arg_list);
    }

    static void setup_wait_key(void)
    {
        // wait for user input
        while (!Serial.available()) { delay(20); }
        // clear input buffer
        while( Serial.available() ) { Serial.read(); }
    }

    void runCalibration();
    void displayOffsets();
    void runLevel();
    void runTest();
    void printMenu();
    void parseInput(int16_t user_input);


    /// menu runner
    void        runOnce(void);

private:

    //sensor to use
	static AP_InertialSensor_MPU6000  *_IMU;
	//console to use
	static FastSerial  *_Console;

};

#endif /* compassMenu_H_ */
